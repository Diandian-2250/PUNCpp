#from ufl import *
#set_level(DEBUG)

# UFL input for formulation of Clement interpolation 1D

cell = interval   

DG = "Discontinuous Lagrange"
CG = "Lagrange" 

degree0 = 0
degree1 = 1

Q = VectorElement(DG, cell, degree0)
W = VectorElement(CG, cell, degree1)
V = FiniteElement(CG, cell, degree1)

v  = TestFunction(W)

p  = TrialFunction(Q)
q  = TestFunction(Q)

c1  = Constant(cell)
c2  = VectorConstant(cell)
cv  = CellVolume(cell)

phi =  Coefficient(V)

a = c1*inner(p, v)*dx(metadata={'form_compiler_parameters': {'quadrature_degree': 1, 'quadrature_scheme': 'vertex'}})
b = (1/cv)*inner(c2, q)*dx
c = (1/cv)*c1*inner(p, v)*dx(metadata={'form_compiler_parameters': {'quadrature_degree': 1, 'quadrature_scheme': 'vertex'}})
d = (1/cv)*inner(-1*grad(phi), q)*dx
forms = [a, b, c, d]
