Installation
============

The following dependencies must be installed before installing PUNC++:

- FEniCS_ 2018.1.0
- CMake_
- Doxygen_
- Git_

.. _FEniCS: https://fenicsproject.org
.. _CMake: https://cmake.org
.. _Doxygen: http://www.doxygen.org
.. _Git: https://git-scm.com

In addition, FEniCS must be compiled with *at least* the following optional dependencies:

- hdf5_
- hypre_
- PETSc_

.. _hdf5: https://support.hdfgroup.org/HDF5/
.. _hypre: https://computation.llnl.gov/projects/hypre-scalable-linear-solvers-multigrid-methods
.. _PETSc: http://www.mcs.anl.gov/petsc/

Since updates to FEniCS (and its dependencies) frequently breaks backwards compatibility, we recommend using the version listed on this page. Several installation methods are described on the FEniCS website. We point out that depending on how FEniCS and its dependencies are installed, there may be a tenfold difference in the performance of PUNC++, since not all installations have the same level of optimization. The Anaconda_ version yields good performance, but make sure the folder containing ``libdolfin.so`` is accesible to the compiler, e.g., by exporting it to ``LD_LIBRARY_PATH``.

.. _Anaconda: https://anaconda.org/conda-forge/fenics

For developers it may be of interest to make themselves familiar with FEniCS. The `FEniCS tutorial`_ is of relevance, especially the section called "Fundamentals: Solving the Poisson equation".

.. _`FEniCS tutorial`: https://fenicsproject.org/pub/tutorial/html/ftut1.html

Once all dependencies are install, download PUNC++::

    cd ~ # or the location of your choice
    git clone https://github.com/puncproject/PUNCpp.git punc++
    cd punc++

PUNC++ comes in two parts: a library (in the folder ``punc++/punc``) and an executable  program (in ``punc++/interaction``). The library contains every computational aspects in a modular fashion, and makes it easy to re-use bits and pieces in different ways and to perform custom tests and benchmarks on individual parts of the library. The executable makes use of the library to perform plasma-object interaction simulations. To build the library::

    cd punc
    ./build.sh # or ./install.sh

The library will be installed in a local folder ``punc++/punc/install``. It can also be installed in system-wide folders by running ``./install.sh`` instead of ``./build.sh``. Developer's documentation of the library can be generated by running::

    ./doc.sh

The documentation is available in the file ``doc.html`` just generated. To install ``interaction``::

    cd ../interaction
    ./build.sh

In addition we recommend installing the following tools for pre- and post-processing:

- Gmsh_ 3
- ParaView_
- Metaplot_

.. _Gmsh: http://gmsh.info/
.. _ParaView: https://www.paraview.org/
.. _Metaplot: https://metaplot.readthedocs.io

The tutorials in this user guide will make use of them. Note that Gmsh changed the format of its files in version 4, and FEniCS 2018.1.0 is not compatible with the new version.
